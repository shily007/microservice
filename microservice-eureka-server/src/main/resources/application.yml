server:
  port: 7001
  
spring:
  application:
    name:  "@project.artifactId@"
  main: 
    allow-bean-definition-overriding: true
#  boot:
#    admin:
#      client:
#        url: http://localhost:8000
  security:
    user:
      name: user
      password: 111
        
management:
  endpoints:
    web:
      exposure:
        include: '*'
        
eureka: 
  instance:
    hostname: localhost #eureka服务端的实例名称
    instance-id: ${spring.application.name}
    prefer-ip-address: true 
  client: 
    register-with-eureka: false           #false表示不向注册中心注册自己。
    fetch-registry: false                 #false表示自己端就是注册中心，我的职责就是维护服务实例，并不需要去检索服务
    service-url: 
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:${server.port}/eureka/     #设置与Eureka Server交互的地址查询服务和注册服务都需要依赖这个地址（单机）。
#      defaultZone: http://eureka7002.com:7002/eureka/,http://eureka7003.com:7003/eureka/
  server:
    enable-self-preservation: true        # 为false禁用eureka的自我保护机制
    
#本服务的说明 
info: 
  app.name: ${spring.application.name}
  company.name: www.dy.com
  build.artifactId: "@project.artifactId@"
  build.version: "@project.version@"
